# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-05-05 13:23
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ebayinfo', '0015_auto_20180804_1929'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Search',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cTitle', models.CharField(max_length=38, null=True, verbose_name='short description')),
                ('cKeyWords', models.TextField(blank=True, help_text='What you type here will go into the ebay serch box -- mulitple terms will result in an AND search.  TIPS: to exclude words, put a - in front (without any space), search for red OR green handbags as follows: handbags (red,green)  search for handbags but exclude red and green as follows: handbags -(red,green)  350 characters MAX', max_length=350, null=True, verbose_name='search for key words (maximum length 350 characters)')),
                ('iDummyCategory', models.PositiveIntegerField(blank=True, help_text='Limit search to items listed in this category -- (key words OR ebay category required!)', null=True, verbose_name='ebay category number')),
                ('cPriority', models.CharField(help_text='high priority A1 A2 A3 ... Z9 low priority', max_length=2, null=True, verbose_name='processing priority')),
                ('tBegSearch', models.DateTimeField(null=True, verbose_name='last search started')),
                ('tEndSearch', models.DateTimeField(null=True, verbose_name='last search completed')),
                ('cLastResult', models.TextField(null=True, verbose_name='last search outcome')),
                ('tCreate', models.DateTimeField(auto_now_add=True, verbose_name='created on')),
                ('tModify', models.DateTimeField(auto_now=True, verbose_name='updated on')),
                ('iEbayCategory', models.ForeignKey(blank=True, help_text='Limit search to items listed in this category -- (key words OR ebay category required!) (Both are OK)', null=True, on_delete=django.db.models.deletion.CASCADE, to='ebayinfo.EbayCategory', verbose_name='ebay category (optional)')),
                ('iUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name_plural': 'searches',
                'db_table': 'searching',
                'ordering': ('cTitle',),
            },
        ),
        migrations.CreateModel(
            name='SearchLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tBegSearch', models.DateTimeField(db_index=True, verbose_name='search started')),
                ('tEndSearch', models.DateTimeField(null=True, verbose_name='search completed')),
                ('tBegStore', models.DateTimeField(null=True, verbose_name='processing started')),
                ('tEndStore', models.DateTimeField(null=True, verbose_name='processing completed')),
                ('iItems', models.PositiveIntegerField(null=True, verbose_name='items found')),
                ('iStoreItems', models.PositiveIntegerField(null=True, verbose_name='items stored')),
                ('iStoreUsers', models.PositiveIntegerField(null=True, verbose_name='stored for owner')),
                ('iItemHits', models.PositiveIntegerField(null=True, verbose_name='have category, brand & model')),
                ('cResult', models.TextField(null=True, verbose_name='search outcome')),
                ('iSearch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='searching.Search', verbose_name='Search that first found this item')),
            ],
            options={
                'verbose_name_plural': 'searchlogs',
                'db_table': 'searchlogs',
            },
        ),
        migrations.AlterUniqueTogether(
            name='search',
            unique_together=set([('iUser', 'cPriority'), ('iUser', 'cTitle'), ('iUser', 'cKeyWords', 'iEbayCategory')]),
        ),
    ]
