# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-04-15 12:14
from __future__ import unicode_literals

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cTitle', models.CharField(db_index=True, help_text='Put the brand name here -- Bot will search for this in the auction titles.<br/>Optionally, you can put additional description in parentheses ().  While searching auction titles, bot will ignore anything in parentheses.', max_length=48, verbose_name='brand name')),
                ('bWanted', models.BooleanField(default=True, help_text='Bot will only download full descriptions and pictures if you want', verbose_name='want anything from this brand?')),
                ('bAllOfInterest', models.BooleanField(default=True, help_text='Definitely set to True for desireable & rare brands', verbose_name='want everything from this brand?')),
                ('cLookFor', models.TextField(blank=True, help_text='Put nick names, common misspellings and alternate brand names here -- leave blank if Bot only needs to look for the brand name.<br>Each line is evaluated separately, Bot will know item is in this brand if any one line matches.', null=True, verbose_name='Considered a hit if this text is found (optional)')),
                ('iStars', core.models.IntegerRangeField(default=5, verbose_name='desireability, 10 star brand is most desireable')),
                ('cComment', models.TextField(blank=True, null=True, verbose_name='comments')),
                ('cNationality', django_countries.fields.CountryField(blank=True, max_length=2, null=True, verbose_name='nationality')),
                ('cExcludeIf', models.TextField(blank=True, help_text='Bot will know item is <b>NOT</b> of this brand if any one line matches (each line evaluated separately, put different exclude tests on different lines)', null=True, verbose_name='Not a hit if this text is found (optional)')),
                ('cRegExLook4Title', models.TextField(null=True)),
                ('cRegExExclude', models.TextField(null=True)),
                ('iLegacyKey', models.PositiveIntegerField(null=True, verbose_name='legacy key')),
                ('tLegacyCreate', models.DateTimeField(blank=True, null=True, verbose_name='legacy row created on')),
                ('tLegacyModify', models.DateTimeField(blank=True, null=True, verbose_name='legacy row updated on')),
                ('tCreate', models.DateTimeField(auto_now_add=True, verbose_name='created on')),
                ('tModify', models.DateTimeField(auto_now=True, verbose_name='updated on')),
                ('iUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name_plural': 'brands',
                'ordering': ('cTitle',),
                'verbose_name': 'brand name',
                'db_table': 'brands',
            },
        ),
        migrations.AlterUniqueTogether(
            name='brand',
            unique_together=set([('cTitle', 'iUser')]),
        ),
    ]
